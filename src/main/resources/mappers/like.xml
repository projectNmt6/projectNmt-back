<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.projectnmt.projectnmt.repository.LikeMapper">

    <resultMap id="LikeResultMap" type="com.projectnmt.projectnmt.entity.Like" >
        <result property="donationPageId" column="donation_page_id" />
        <result property="userId" column="user_id" />
    </resultMap>

    <insert id="insert" parameterType="com.projectnmt.projectnmt.entity.Like" >
        INSERT INTO like_tb
        ( donation_page_id, user_id)
        VALUES
        ( #{donationPageId}, #{userId})
    </insert>
    <delete id="deleteByUserIdAndDonationPageId" parameterType="com.projectnmt.projectnmt.repository.LikeMapper" >
        delete
        from
        like_tb
        where
        donation_page_id = #{donationPageId}
        and
        user_id = #{userId}
    </delete>
    <select id="findByUserIdAndDonationPageId" parameterType="com.projectnmt.projectnmt.dto.req.LikeReqDto" resultMap="LikeResultMap">
        SELECT
        donation_page_id,
        user_id
        FROM
        like_tb
        WHERE
        donation_page_id = #{donationPageId}
        AND
        user_id = #{userId}
    </select>

    <select id="countLikesByDonationPageId" parameterType="com.projectnmt.projectnmt.dto.req.LikeReqDto" resultType="integer">
        select
        COALESCE(count(*), 0)
        from
        like_tb
        where
        donation_page_id = #{donationPageId}
    </select>

    <select id="existsByUserIdAndDonationPageId" parameterType="com.projectnmt.projectnmt.dto.req.LikeReqDto" resultType="integer">
        SELECT
        CASE
        WHEN EXISTS (
        SELECT 1
        FROM like_tb
        WHERE donation_page_id = #{donationPageId} and user_id=#{userId}
        ) THEN 1
        ELSE 0
        END AS result
    </select>
</mapper>